# Prevent sourcing multiple time
if [ -z "${fjenv_src_sourced:-}" ]; then	# {
fjenv_src_sourced="Y"

########################################################################
########################################################################
##
## Control flags for build-up the environment.
##	Any string is treated as 'true'.
##	Undefined, or empty value means 'false'.
##
## fjenv_use_venv:	 If true, use VENV, otherwise install everything in PREFIX
## fjenv_use_fcc:	 If true, use Fujitsu Compiler, otherwise use GCC
## fjenv_offline_install: If true, Install to the Non-Internet accessible site.
##                        Otherwise, downloading is performed during installation.
##
########################################################################
########################################################################

fjenv_use_venv=true			# 'false' is not tested
fjenv_use_fcc=true			# 'false' is not tested
fjenv_offline_install=true		# undefined means 'false'

########################################################################
########################################################################
##
## Change the following to suit your environment.
##
## TCSDS_PATH:	   Fujitsu Compiler path.
## VENV_PATH:	   VENV path. Do not share with PyTorch.
## PREFIX:	   Install directory for all binaries
##		    (except pip packages)
##
## For VENV_PATH and PREFIX, use the directory outside of
## TensorFlow source directory (TENSORFLOW_TOP).
##
########################################################################
########################################################################

#TCSDS_PATH=/opt/FJSVstclanga/v1.1.0	# Mandatory when use_fcc is true
#VENV_PATH=~/venv_fcc_tf			# Mandatory when use_venv is true
#PREFIX=~/local_fcc			# Mandatory
PREFIX=${HOME}/.local/aarch64
TCSDS_PATH=/opt/FJSVxtclanga/tcsds-1.2.33
VENV_PATH=${HOME}/.local/aarch64/venv/tensorflow

: ${MAX_JOBS:=40}			# (Optional) Parallelism

########################################################################
########################################################################
##
## DO NOT CHANGE BELOW
##
########################################################################
########################################################################

TENSORFLOW_TOP=$(cd $(dirname ${BASH_SOURCE:-$0})/..; pwd)
DOWNLOAD_PATH=$TENSORFLOW_TOP/fcc_build_script/down
WHL_PATH=$TENSORFLOW_TOP/fcc_build_script/whl_pkg
PIP_PACKAGE_PATH=${DOWNLOAD_PATH}/pip_packages
TF_DISTDIR=${DOWNLOAD_PATH}/tf_dist

#
# For offline installation, disable cache for bazel and pip3.
# Note:
#   It can be enabled by defining "fjenv_unuse_cache" variable.
#   prior to env.src read.
#   Ex. In the command line, type this:
# 	$ fjenv_unuse_cache=true
#

if [ "${fjenv_offline_install-}" ]; then
    : ${fjenv_unuse_cache=true}
fi

#
# Env for Compilers
#

if [ "${fjenv_use_fcc-}" ]; then
    if [ -z "${LD_LIBRARY_PATH:-}" ]; then
        export LD_LIBRARY_PATH=${TCSDS_PATH}/lib64
    else
        LD_LIBRARY_PATH=${TCSDS_PATH}/lib64:${LD_LIBRARY_PATH}
    fi
    export CC="fcc -Nclang"
    export CXX="FCC -Nclang"
    export LC_ALL=C
fi
if [ ! -z "$PREFIX" ]; then
    PATH=${TCSDS_PATH}/bin:${PREFIX}/bin:${PATH}
    hash -r
fi

#
# pip3, wget, git options
#

PIP3_OPTIONS="--no-color"

if [ "${fjenv_unuse_cache-}" ]; then
    PIP3_OPTIONS="$PIP3_OPTIONS --no-cache-dir"
fi

if [ "${fjenv_offline_install-}" ]; then
    PIP3_OPTIONS="$PIP3_OPTIONS --retries 1 --timeout 1 --no-index --find-links ${PIP_PACKAGE_PATH}"
fi

if [ "${fjenv_debug-}" ]; then
    PIP3_OPTIONS="$PIP3_OPTIONS -v --progress-bar ascii"
    WGET_OPTIONS="--progress=dot:giga"
    GIT_OPTIONS="--progress"
else
    PIP3_OPTIONS="$PIP3_OPTIONS --progress-bar off"
    WGET_OPTIONS="-nv"
    GIT_OPTIONS="--no-progress"
fi

#
# bazel options for
#
#

CONFIG_BAZEL_STARTUP="--host_jvm_args=-Djdk.http.auth.tunneling.disabledSchemes="		# for proxy
CONFIG_BAZEL="--verbose_failures --jobs=${MAX_JOBS}"

if [ "${fjenv_offline_install-}" ]; then
    CONFIG_BAZEL="$CONFIG_BAZEL --http_timeout_scaling=0.1"
fi

if [ "${fjenv_unuse_cache-}" ]; then
    CONFIG_BAZEL="$CONFIG_BAZEL --repository_cache="
fi

if [ "${fjenv_debug-}" ]; then
    CONFIG_BAZEL="$CONFIG_BAZEL --subcommands=pretty_print"
else
    CONFIG_BAZEL="$CONFIG_BAZEL --color=no --curses=no --show_progress_rate_limit=30"
fi

fi						# }
